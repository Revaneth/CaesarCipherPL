<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAYAAAAAACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAqKipfX1+VlZWdnZ2ioqKkpKTFxcXQ0NC3t7ewsLCDg4NfX18/Pz9KSkpdXV1u
        bm6BgYF3d3dxcXFwcHB1dXV9fX1/f3+Hh4cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqKiouLi5TU1OS
        kpKdnZ2kpKTLy8vKysq4uLiamppaWlo9PT08PDw6OjpCQkJZWVlxcXFWVlZKSkpGRkZDQ0NDQ0NERERF
        RUUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLCwtLS0wMDBERER8fHytra3R0dHNzc2rq6t/f395eXlk
        ZGRISEhQUFBtbW1UVFRgYGBcXFxSUlJOTk5OTk5NTU1ISEhISEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAvLy8xMTE1NTU5OTlMTEyenp7Ly8u7u7uMjIy5ubnb29vMzMy4uLi6urrHx8eTk5NwcHBjY2NRUVFP
        T09NTU1NTU1NTU1NTU0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzM0NDQ1NTU8PDxCQkKTk5O+vr6a
        mpqcnJyxsbGjo6OOjo58fHx9fX2Pj4+VlZWPj49ubm5QUFBRUVFNTU1LS0tPT09TU1MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzMzM0NDQ5OTk9PT1ERESJiYmysrKcnJyDg4Ovr6+Pj49QUFA8PDw+Pj5oaGh2
        dnZ1dXV6enpZWVlSUlJQUFBOTk5QUFBSUlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4ODg3Nzc2NjY8
        PDxISEiAgIC1tbWjo6NMTEyDg4OhoaF9fX1PT09XV1d6enpSUlJmZmaDg4N6enpYWFhNTU1MTExSUlJS
        UlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6Ojo2NjY2NjY1NTVYWFienp6np6fHx8eNjY1vb2+cnJyJ
        iYlnZ2d4eHiDg4NsbGyTk5N3d3eIiIhra2tGRkZKSkpNTU1PT08AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzM0NDQ3Nzc5OTlnZ2erq6ujo6OVlZW/v7/b29u0tLSCgoJAQEBoaGjHx8fn5+erq6t4eHiHh4d3
        d3dERERISEhJSUlISEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMxMTE2NjY6Ojpzc3O2tralpaWb
        m5tZWVm2travr6+Xl5eTk5OQkJCwsLCFhYVnZ2eIiIiFhYV3d3dEREREREREREREREQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzMzMzMzM5OTk1NTWAgICmpqacnJzR0dGRkZFdXV2zs7PKysro6Ojq6uqlpaVb
        W1uRkZGJiYltbW14eHhJSUlGRkZBQUFDQ0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzM0NDQ2NjZv
        b2+ioqKampqgoKC0tLS8vLyjo6OWlpbCwsLi4uLe3t60tLSwsLDT09OcnJxra2t/f39VVVVCQkJDQ0M+
        Pj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NDQyMjI9PT2Pj4+tra25ubnDw8OkpKSlpaXCwsK4uLjI
        yMjg4ODY2NjIyMjNzc22trabm5urq6uSkpJcXFxBQUFBQUFCQkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA4ODg1NTVNTU10dHSsrKzMzMzR0dG7u7uZmZmlpaW0tLTGxsbg4ODV1dXDw8O1tbWioqK8vLzKysq4
        uLhhYWFBQUFGRkZDQ0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxMTE9PT1DQ0NcXFyjo6PGxsbMzMyw
        sLBxcXFhYWGTk5PAwMDh4eG+vr59fX1kZGR4eHipqanBwcHBwcF8fHw2NjZERERAQEAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA2NjZJSUlAQEBHR0e6urqUlJR2dnahoaF1dXU2NjZCQkKpqand3d2IiIg5OTlD
        Q0NsbGyMjIxzc3OkpKSTk5NKSko9PT08PDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1NTVERERQUFBv
        b2/AwMCioqJhYWFra2tOTk4yMjIvLy9aWlqNjY1ZWVk1NTUrKytKSkpPT089PT2FhYWDg4NiYmI/Pz87
        OzsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5OTlFRUVZWVmPj4+vr6+8vLyurq6EhISQkJCampp/f3+D
        g4OUlJRwcHBzc3NjY2NtbW2AgIC2traampqDg4NSUlI5OTk/Pz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA+Pj5CQkJjY2OFhYWQkJC1tbXJycnc3Nzc3NzAwMDIyMjc3NzQ0NDLy8vNzc3Pz8/X19fe3t7W1taU
        lJRtbW1XV1c8PDxCQkIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4ODg8PDxmZmaIiIiSkpK1tbW/v7/D
        w8PQ0NDPz8/MzMzMzMzKysrV1dXc3NzV1dXU1NTY2NjGxsaUlJRqampVVVU/Pz88PDwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA5OTlBQUFsbGyHh4enp6e6urq5ubm5ubmurq66urrExMTExMTFxcXHx8fHx8fH
        x8fPz8/Hx8e5ubmgoKCJiYl6enpNTU05OTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6OjpDQ0NpaWmB
        gYGpqam7u7u6urqrq6umpqasrKyvr6+bm5uioqKoqKi1tbW5ubm9vb3CwsKysrKnp6elpaWSkpJbW1s7
        OzsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NDQ9PT1dXV17e3uZmZmxsbHBwcGvr6+5ubmrq6uenp6Y
        mJicnJyjo6OysrKpqam0tLS5ubnAwMCsrKypqamZmZlOTk44ODgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzM0NDRQUFB8fHyNjY2QkJCrq6u1tbW7u7vGxsa4uLixsbG0tLTCwsK8vLzJycnNzc3Ozs7CwsKi
        oqKfn591dXU6Ojo3NzcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuLi4yMjJFRUVxcXF3d3d/f394eHh4
        eHiLi4uKioqWlpaCgoKVlZWYmJiwsLCkpKSenp6Xl5ecnJy4uLihoaFmZmY0NDQ8PDwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAnJycuLi41NTVoaGh+fn55eXl0dHR3d3d7e3ugoKCVlZWysrKqqqrQ0NCpqam0
        tLSenp6xsbG2trawsLCSkpJBQUExMTE3NzcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjIyMuLi4zMzNE
        RERvb29/f394eHh+fn6Wlpa2tragoKC+vr7Dw8PNzc29vb3KysrBwcG4uLiysrKpqalUVFQpKSkvLy8y
        MjIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIqKioxMTE1NTU9PT1iYmJ3d3d2dnaOjo6srKyysrLF
        xcXQ0NDKysrJycnFxcW7u7ulpaWgoKBdXV0nJycvLy8vLy8yMjIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgICAlJSUpKSkwMDAwMDAvLy9LS0t3d3eFhYWIiIiTk5OXl5e1tbW0tLSkpKStra2kpKR/f39KSkoi
        IiIoKCgnJycoKCgsLCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhISEhISEkJCQnJycpKSkpKSkgICAy
        MjJcXFxzc3N4eHiFhYWgoKCcnJyLi4tzc3NQUFAoKCggICAmJiYiIiIiIiIlJSUtLS0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAeHh4eHh4eHh4fHx8hISEhISEeHh4cHBwXFxcdHR0qKipAQEA6OjozMzMvLy8g
        ICAYGBgcHBwfHx8eHh4fHx8eHh4gICAsLCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAgICAeHh4g
        ICAhISEeHh4dHR0fHx8hISEdHR0ZGRkSEhIUFBQVFRUWFhYbGxsfHx8dHR0bGxseHh4eHh4cHBwgICAw
        MDAAAAAAAAAAAAAAAADwAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAADw==
</value>
  </data>
</root>